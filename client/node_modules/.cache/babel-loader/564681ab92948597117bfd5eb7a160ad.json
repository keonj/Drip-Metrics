{"ast":null,"code":"var _jsxFileName = \"C:\\\\Western\\\\2021\\\\WEC\\\\Drip-Metrics\\\\Drip-Metrics\\\\client\\\\src\\\\components\\\\create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\"\n  });\n  const navigate = useNavigate(); // These methods will update the state properties.\n\n  function updateForm(value) {\n    return setForm(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  } // This function will handle the submission.\n\n\n  async function onSubmit(e) {\n    e.preventDefault(); // When a post request is sent to the create url, we'll add a new record to the database.\n\n    const newPerson = { ...form\n    };\n    await fetch(\"http://localhost:5000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPerson)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      name: \"\",\n      position: \"\",\n      level: \"\"\n    });\n    navigate(\"/\");\n  } // This following section will display the form that takes the input from the user.\n\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"create record\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Create, \"7YMarDxWCVnXUhDlN85aZKeChlo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["C:/Western/2021/WEC/Drip-Metrics/Drip-Metrics/client/src/components/create.js"],"names":["React","useState","useNavigate","Create","form","setForm","name","position","level","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","fetch","method","headers","body","JSON","stringify","catch","error","window","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,cAA5B;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC;AAC/BK,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,QAAQ,EAAE,EAFqB;AAG/BC,IAAAA,KAAK,EAAE;AAHwB,GAAD,CAAhC;AAKA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B,CANgC,CAQhC;;AACA,WAASQ,UAAT,CAAoBC,KAApB,EAA2B;AACzB,WAAON,OAAO,CAAEO,IAAD,IAAU;AACvB,aAAO,EAAE,GAAGA,IAAL;AAAW,WAAGD;AAAd,OAAP;AACD,KAFa,CAAd;AAGD,GAb+B,CAehC;;;AACA,iBAAeE,QAAf,CAAwBC,CAAxB,EAA2B;AACzBA,IAAAA,CAAC,CAACC,cAAF,GADyB,CAGzB;;AACA,UAAMC,SAAS,GAAG,EAAE,GAAGZ;AAAL,KAAlB;AAEA,UAAMa,KAAK,CAAC,kCAAD,EAAqC;AAC9CC,MAAAA,MAAM,EAAE,MADsC;AAE9CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFqC;AAK9CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,SAAf;AALwC,KAArC,CAAL,CAOLO,KAPK,CAOCC,KAAK,IAAI;AACdC,MAAAA,MAAM,CAACC,KAAP,CAAaF,KAAb;AACA;AACD,KAVK,CAAN;AAYAnB,IAAAA,OAAO,CAAC;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,QAAQ,EAAE,EAAtB;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KAAD,CAAP;AACAC,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GApC+B,CAsChC;;;AACA,sBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAEA;;GAzCuBN,M;UAMND,W;;;KANMC,M","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n \r\nexport default function Create() {\r\n const [form, setForm] = useState({\r\n   name: \"\",\r\n   position: \"\",\r\n   level: \"\",\r\n });\r\n const navigate = useNavigate();\r\n \r\n // These methods will update the state properties.\r\n function updateForm(value) {\r\n   return setForm((prev) => {\r\n     return { ...prev, ...value };\r\n   });\r\n }\r\n \r\n // This function will handle the submission.\r\n async function onSubmit(e) {\r\n   e.preventDefault();\r\n \r\n   // When a post request is sent to the create url, we'll add a new record to the database.\r\n   const newPerson = { ...form };\r\n \r\n   await fetch(\"http://localhost:5000/record/add\", {\r\n     method: \"POST\",\r\n     headers: {\r\n       \"Content-Type\": \"application/json\",\r\n     },\r\n     body: JSON.stringify(newPerson),\r\n   })\r\n   .catch(error => {\r\n     window.alert(error);\r\n     return;\r\n   });\r\n \r\n   setForm({ name: \"\", position: \"\", level: \"\" });\r\n   navigate(\"/\");\r\n }\r\n \r\n // This following section will display the form that takes the input from the user.\r\n return ( <p>create record</p>\r\n );\r\n}"]},"metadata":{},"sourceType":"module"}