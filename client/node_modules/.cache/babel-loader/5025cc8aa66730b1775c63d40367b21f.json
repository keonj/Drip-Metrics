{"ast":null,"code":"var _jsxFileName = \"C:\\\\Western\\\\Ivey\\\\WEC\\\\Drip-Metrics\\\\Drip-Metrics\\\\client\\\\src\\\\components\\\\sensor-images.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SensorImages() {\n  // const imgUpload = \"http://mydrip.ca/wec2022/\" + getImgURL(); //data call to get image url\n  function getImgURL() {\n    console.log(\"test\"); // const { MongoClient } = require(\"mongodb\");\n    // const url = \"mongodb+srv://admin:drip2021@cluster0.lrjsm.mongodb.net/DripDatabase?retryWrites=true&w=majority\";\n    // const client = new MongoClient(url);\n    // const dbName = \"DripDatabase\"\n\n    const testID = \"61db5f63fb54d96ba40d8702\";\n    var response = fetch(`http://localhost:5000/record`);\n    console.log(response); // try {\n    //     await client.connect();\n    //     console.log(\"Connected correctly to server\")\n    //     const db = client.db(dbName);\n    //     // Use collection historical\n    //     const col = db.collection(\"historical\");\n    //     const myDoc = await col.findOne();\n    //     console.log(myDoc);\n    // }\n    // catch (err) {\n    //     console.log(err.stack);\n    // }\n    // finally {\n    //     await client.close();\n    // }\n  } // async function fetchData() {\n  //     const img = params.img.toString();\n  //     const response = await fetch(`http://localhost:5000/record/${params.img.toString()}`);\n  //     if (!response.ok) {\n  //       const message = `An error has occured: ${response.statusText}`;\n  //       window.alert(message);\n  //       return;\n  //     }\n  // }\n  // This following section will display the form that takes the input from the user.\n  // Put HTML here\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getImgURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Sensor Images something\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 6\n  }, this);\n}\n_c = SensorImages;\n\nvar _c;\n\n$RefreshReg$(_c, \"SensorImages\");","map":{"version":3,"sources":["C:/Western/Ivey/WEC/Drip-Metrics/Drip-Metrics/client/src/components/sensor-images.js"],"names":["React","useState","SensorImages","getImgURL","console","log","testID","response","fetch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAIA,eAAe,SAASC,YAAT,GAAwB;AAGnC;AAEA,WAASC,SAAT,GAAoB;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EADgB,CAEhB;AAEA;AACA;AAEA;;AAEA,UAAMC,MAAM,GAAG,0BAAf;AAEA,QAAIC,QAAQ,GAAGC,KAAK,CAAE,8BAAF,CAApB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ,EAZgB,CAchB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAlCkC,CAqC/B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEP;AACA;;;AACA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEJ;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWA;KA7DuBD,Y","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\n \r\nexport default function SensorImages() {\r\n \r\n\r\n    // const imgUpload = \"http://mydrip.ca/wec2022/\" + getImgURL(); //data call to get image url\r\n\r\n    function getImgURL(){\r\n        console.log(\"test\");\r\n        // const { MongoClient } = require(\"mongodb\");\r\n    \r\n        // const url = \"mongodb+srv://admin:drip2021@cluster0.lrjsm.mongodb.net/DripDatabase?retryWrites=true&w=majority\";\r\n        // const client = new MongoClient(url);\r\n    \r\n        // const dbName = \"DripDatabase\"\r\n\r\n        const testID = \"61db5f63fb54d96ba40d8702\"\r\n\r\n        var response = fetch(`http://localhost:5000/record`);\r\n        console.log(response);\r\n    \r\n        // try {\r\n        //     await client.connect();\r\n        //     console.log(\"Connected correctly to server\")\r\n        //     const db = client.db(dbName);\r\n        //     // Use collection historical\r\n        //     const col = db.collection(\"historical\");\r\n        //     const myDoc = await col.findOne();\r\n        //     console.log(myDoc);\r\n        // }\r\n        // catch (err) {\r\n        //     console.log(err.stack);\r\n        // }\r\n        // finally {\r\n        //     await client.close();\r\n        // }\r\n    }\r\n\r\n  \r\n        // async function fetchData() {\r\n        //     const img = params.img.toString();\r\n        //     const response = await fetch(`http://localhost:5000/record/${params.img.toString()}`);\r\n        \r\n        //     if (!response.ok) {\r\n        //       const message = `An error has occured: ${response.statusText}`;\r\n        //       window.alert(message);\r\n        //       return;\r\n        //     }\r\n        // }\r\n\r\n // This following section will display the form that takes the input from the user.\r\n // Put HTML here\r\n return ( \r\n     <div>\r\n         <button onClick={getImgURL}></button>\r\n    <p>Sensor Images something</p>\r\n     {/* <img src=\"http://mydrip.ca/wec2022/uploads/2022.01.09_17:19:13_esp32-cam.jpg\"></img>\r\n\r\n     <img src={{imgUpload}}></img> */}\r\n\r\n     </div>\r\n\r\n );\r\n}"]},"metadata":{},"sourceType":"module"}